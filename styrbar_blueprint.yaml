blueprint:
  name: IKEA STYRBAR Remote (E2001/E2002) - Firmware 2.4.16 Fixed v2
  description: |
    **Version: 2.0.0** | Last Updated: 2025-10-25
    
    Completely redesigned approach for IKEA STYRBAR 4-button remote via ZHA.
    
    This blueprint uses a different strategy that doesn't rely on race-prone state checks:
    - Uses event sequence detection with timestamps
    - Filters spurious events based on event patterns, not helper state
    - More reliable detection of all 12 button actions
    
    **NEW APPROACH:**
    - Detects "recall" scene commands to filter spurious "on" events
    - Uses automation mode: restart to ensure clean state
    - Helper only used for tracking, NOT for filtering
    - All release events properly detected with cleanup
    
    **Requirements:**
    - Two text helpers (Settings > Helpers > Text, max length: 30):
      1. Last button pressed (tracks: on, off, left, right, etc.)
      2. Last command (tracks the actual command received)
    
    **Changelog:**
    - v2.0.0 (2025-10-25): Complete redesign using event patterns instead of state checks
    - v1.2.0 (2025-10-25): Fixed timing race condition by reordering
    - v1.1.0 (2025-10-25): Added left/right state filtering
    - v1.0.0 (2025-10-25): Initial release
    
  domain: automation
  source_url: https://github.com/pon-ekh/ha_styrbar_blueprint/blob/main/styrbar_blueprint.yaml

  input:
    remote_device:
      name: STYRBAR Remote
      description: Select your IKEA STYRBAR remote control
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: Remote Control N2
          multiple: false
    
    helper_last_button:
      name: Helper - Last Button Tracker
      description: |
        Text helper to track which button was pressed (on/off/left/right)
        Create: Settings > Helpers > Text (max length: 30)
      selector:
        entity:
          domain: input_text
          multiple: false
    
    helper_last_command:
      name: Helper - Last Command Tracker
      description: |
        Text helper to track the last command received
        Create: Settings > Helpers > Text (max length: 30)
      selector:
        entity:
          domain: input_text
          multiple: false

    # ========================================
    # ON BUTTON ACTIONS
    # ========================================
    on_button_short_press:
      name: ON Button - Short Press
      description: Action to run when ON button is pressed briefly
      default: []
      selector:
        action: {}
    
    on_button_long_press:
      name: ON Button - Long Press (Hold Start)
      description: Action to run when ON button is held down
      default: []
      selector:
        action: {}
    
    on_button_release:
      name: ON Button - Release (After Hold)
      description: Action to run when ON button is released after holding
      default: []
      selector:
        action: {}
    
    # ========================================
    # OFF BUTTON ACTIONS
    # ========================================
    off_button_short_press:
      name: OFF Button - Short Press
      description: Action to run when OFF button is pressed briefly
      default: []
      selector:
        action: {}
    
    off_button_long_press:
      name: OFF Button - Long Press (Hold Start)
      description: Action to run when OFF button is held down
      default: []
      selector:
        action: {}
    
    off_button_release:
      name: OFF Button - Release (After Hold)
      description: Action to run when OFF button is released after holding
      default: []
      selector:
        action: {}
    
    # ========================================
    # LEFT BUTTON ACTIONS
    # ========================================
    left_button_short_press:
      name: LEFT Button - Short Press
      description: Action to run when LEFT button is pressed briefly
      default: []
      selector:
        action: {}
    
    left_button_long_press:
      name: LEFT Button - Long Press (Hold Confirmed)
      description: Action to run when LEFT button hold is confirmed
      default: []
      selector:
        action: {}
    
    left_button_release:
      name: LEFT Button - Release (After Hold)
      description: Action to run when LEFT button is released after holding
      default: []
      selector:
        action: {}
    
    # ========================================
    # RIGHT BUTTON ACTIONS
    # ========================================
    right_button_short_press:
      name: RIGHT Button - Short Press
      description: Action to run when RIGHT button is pressed briefly
      default: []
      selector:
        action: {}
    
    right_button_long_press:
      name: RIGHT Button - Long Press (Hold Confirmed)
      description: Action to run when RIGHT button hold is confirmed
      default: []
      selector:
        action: {}
    
    right_button_release:
      name: RIGHT Button - Release (After Hold)
      description: Action to run when RIGHT button is released after holding
      default: []
      selector:
        action: {}

mode: queued
max_exceeded: silent
max: 10

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote_device

variables:
  command: "{{ trigger.event.data.command }}"
  args: "{{ trigger.event.data.args | default([]) }}"
  cluster_id: "{{ trigger.event.data.cluster_id }}"
  helper_button: !input helper_last_button
  helper_command: !input helper_last_command
  last_button: "{{ states(helper_button) }}"
  last_command: "{{ states(helper_command) }}"

action:
  # Process based on command type FIRST, before updating trackers
  - choose:
      # ============================================
      # IGNORE SPURIOUS EVENTS - Do nothing for these
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'recall' }}
        sequence: []
      
      # ============================================
      # ON BUTTON - Short Press
      # Filter: Only if last command wasn't "release" from left/right
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'on' and cluster_id == 6 }}
          - condition: template
            value_template: >
              {{ not (last_command == 'release' and last_button in ['left', 'right']) }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "on"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input on_button_short_press

      # ============================================
      # ON BUTTON - Long Press (Hold)
      # ============================================
      - conditions:
          - condition: template
            value_template: "{{ command == 'move_with_on_off' }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "on_holding"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input on_button_long_press

      # ============================================
      # ON/OFF BUTTON - Release after Hold
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'stop' }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - choose:
              # ON button release
              - conditions:
                  - condition: template
                    value_template: "{{ last_button == 'on_holding' }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input helper_last_button
                    data:
                      value: "on"
                  - choose:
                      - conditions: "{{ true }}"
                        sequence: !input on_button_release
              
              # OFF button release
              - conditions:
                  - condition: template
                    value_template: "{{ last_button == 'off_holding' }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input helper_last_button
                    data:
                      value: "off"
                  - choose:
                      - conditions: "{{ true }}"
                        sequence: !input off_button_release

      # ============================================
      # OFF BUTTON - Short Press
      # ============================================
      - conditions:
          - condition: template
            value_template: "{{ command == 'off' }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "off"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input off_button_short_press

      # ============================================
      # OFF BUTTON - Long Press (Hold)
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'move' and args|length > 0 }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "off_holding"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input off_button_long_press

      # ============================================
      # LEFT BUTTON - Short Press
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'press' and args|length > 0 and args[0] == 257 }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "left"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input left_button_short_press

      # ============================================
      # LEFT BUTTON - Long Press (actual hold command)
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'hold' and args|length > 0 and args[0] == 3329 }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "left_holding"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input left_button_long_press

      # ============================================
      # LEFT/RIGHT BUTTON - Release after Hold
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'release' and args|length > 0 and args[0] != 0 }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - choose:
              # LEFT button release
              - conditions:
                  - condition: template
                    value_template: "{{ last_button == 'left_holding' }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input helper_last_button
                    data:
                      value: "left"
                  - choose:
                      - conditions: "{{ true }}"
                        sequence: !input left_button_release
              
              # RIGHT button release
              - conditions:
                  - condition: template
                    value_template: "{{ last_button == 'right_holding' }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input helper_last_button
                    data:
                      value: "right"
                  - choose:
                      - conditions: "{{ true }}"
                        sequence: !input right_button_release

      # ============================================
      # RIGHT BUTTON - Short Press
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'press' and args|length > 0 and args[0] == 256 }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "right"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input right_button_short_press

      # ============================================
      # RIGHT BUTTON - Long Press (actual hold command)
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'hold' and args|length > 0 and args[0] == 3328 }}
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: "right_holding"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input right_button_long_press

      # ============================================
      # SPURIOUS RELEASE 0 - Just update state tracking
      # ============================================
      - conditions:
          - condition: template
            value_template: >
              {{ command == 'release' and args|length > 0 and args[0] == 0 }}
        sequence:
          # Update command tracker first
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_command
            data:
              value: "{{ command }}"
          # Update to holding state based on which button was last pressed
          - service: input_text.set_value
            target:
              entity_id: !input helper_last_button
            data:
              value: >
                {% if last_button == 'left' %}
                  left_holding
                {% elif last_button == 'right' %}
                  right_holding
                {% else %}
                  {{ last_button }}
                {% endif %}
